# [doc = r" https://www.rfc-editor.org/rfc/rfc8610#appendix-D"] pub struct TODO ; pub type Text = String ; pub type Any = serde_json :: Value ; pub struct Command { pub id : JsUint , pub NONE : CommandData , pub NONE : Extensible , } pub enum CommandData { Todo , Todo , Todo , Todo , Todo , Todo , Todo , Todo , Todo , } pub struct EmptyParams { pub NONE : Extensible , } pub type Message = TODO ; pub struct CommandResponse { pub type : String , pub id : JsUint , pub result : ResultData , pub NONE : Extensible , } pub struct ErrorResponse { pub type : String , pub id : TODO , pub error : ErrorCode , pub message : Text , pub stacktrace : Text , pub NONE : Extensible , } pub type ResultData = TODO ; pub struct EmptyResult { pub NONE : Extensible , } pub struct Event { pub type : String , pub NONE : EventData , pub NONE : Extensible , } pub enum EventData { Todo , Todo , Todo , Todo , Todo , } pub struct Extensible { pub TODO : Any , } pub type JsInt = TODO ; pub type JsUint = TODO ; pub type ErrorCode = TODO ; pub enum SessionCommand { Todo , Todo , Todo , Todo , Todo , } pub type SessionResult = TODO ; pub struct SessionCapabilitiesRequest { pub alwaysMatch : SessionCapabilityRequest , pub firstMatch : TODO , } pub struct SessionCapabilityRequest { pub acceptInsecureCerts : Bool , pub browserName : Text , pub browserVersion : Text , pub platformName : Text , pub proxy : SessionProxyConfiguration , pub unhandledPromptBehavior : SessionUserPromptHandler , pub NONE : Extensible , } pub enum SessionProxyConfiguration { Todo , Todo , Todo , Todo , Todo , } pub struct SessionAutodetectProxyConfiguration { pub proxyType : String , pub NONE : Extensible , } pub struct SessionDirectProxyConfiguration { pub proxyType : String , pub NONE : Extensible , } pub struct SessionManualProxyConfiguration { pub proxyType : String , pub ftpProxy : Text , pub httpProxy : Text , pub sslProxy : Text , pub NONE : SessionSocksProxyConfiguration , pub noProxy : TODO , pub NONE : Extensible , } pub struct SessionSocksProxyConfiguration { pub socksProxy : Text , pub socksVersion : TODO , } pub struct SessionPacProxyConfiguration { pub proxyType : String , pub proxyAutoconfigUrl : Text , pub NONE : Extensible , } pub struct SessionSystemProxyConfiguration { pub proxyType : String , pub NONE : Extensible , } pub struct SessionUserPromptHandler { pub alert : SessionUserPromptHandlerType , pub beforeUnload : SessionUserPromptHandlerType , pub confirm : SessionUserPromptHandlerType , pub default : SessionUserPromptHandlerType , pub file : SessionUserPromptHandlerType , pub prompt : SessionUserPromptHandlerType , } pub type SessionUserPromptHandlerType = TODO ; pub type SessionSubscription = TODO ; pub struct SessionSubscriptionRequest { pub events : TODO , pub contexts : TODO , pub userContexts : TODO , } pub struct SessionUnsubscribeByIdRequest { pub subscriptions : TODO , } pub struct SessionUnsubscribeByAttributesRequest { pub events : TODO , pub contexts : TODO , } pub struct SessionStatus { pub method : String , pub params : EmptyParams , } pub struct SessionStatusResult { pub ready : Bool , pub message : Text , } pub struct SessionNew { pub method : String , pub params : SessionNewParameters , } pub struct SessionNewParameters { pub capabilities : SessionCapabilitiesRequest , } pub struct SessionNewResult { pub sessionId : Text , pub capabilities : TODO , } pub struct SessionEnd { pub method : String , pub params : EmptyParams , } pub struct SessionSubscribe { pub method : String , pub params : SessionSubscriptionRequest , } pub struct SessionSubscribeResult { pub subscription : SessionSubscription , } pub struct SessionUnsubscribe { pub method : String , pub params : SessionUnsubscribeParameters , } pub type SessionUnsubscribeParameters = TODO ; pub enum BrowserCommand { Todo , Todo , Todo , Todo , Todo , Todo , } pub type BrowserResult = TODO ; pub type BrowserClientWindow = TODO ; pub struct BrowserClientWindowInfo { pub active : Bool , pub clientWindow : BrowserClientWindow , pub height : JsUint , pub state : TODO , pub width : JsUint , pub x : JsInt , pub y : JsInt , } pub type BrowserUserContext = TODO ; pub struct BrowserUserContextInfo { pub userContext : BrowserUserContext , } pub struct BrowserClose { pub method : String , pub params : EmptyParams , } pub struct BrowserCreateUserContext { pub method : String , pub params : EmptyParams , } pub type BrowserCreateUserContextResult = TODO ; pub struct BrowserGetClientWindows { pub method : String , pub params : EmptyParams , } pub struct BrowserGetClientWindowsResult { pub clientWindows : TODO , } pub struct BrowserGetUserContexts { pub method : String , pub params : EmptyParams , } pub struct BrowserGetUserContextsResult { pub userContexts : TODO , } pub struct BrowserRemoveUserContext { pub method : String , pub params : BrowserRemoveUserContextParameters , } pub struct BrowserRemoveUserContextParameters { pub userContext : BrowserUserContext , } pub struct BrowserSetClientWindowState { pub method : String , pub params : BrowserSetClientWindowStateParameters , } pub struct BrowserSetClientWindowStateParameters { pub clientWindow : BrowserClientWindow , pub todo : TODO , } pub struct BrowserClientWindowNamedState { pub state : TODO , } pub struct BrowserClientWindowRectState { pub state : String , pub width : JsUint , pub height : JsUint , pub x : JsInt , pub y : JsInt , } pub enum BrowsingContextCommand { Todo , Todo , Todo , Todo , Todo , Todo , Todo , Todo , Todo , Todo , Todo , Todo , } pub type BrowsingContextResult = TODO ; pub enum BrowsingContextEvent { Todo , Todo , Todo , Todo , Todo , Todo , Todo , Todo , Todo , Todo , Todo , Todo , Todo , } pub type BrowsingContextBrowsingContext = TODO ; pub struct BrowsingContextInfoList { pub NONE : BrowsingContextInfo , } pub struct BrowsingContextInfo { pub children : TODO , pub clientWindow : BrowserClientWindow , pub context : BrowsingContextBrowsingContext , pub originalOpener : TODO , pub url : Text , pub userContext : BrowserUserContext , pub parent : TODO , } pub type BrowsingContextLocator = TODO ; pub struct BrowsingContextAccessibilityLocator { pub type : String , pub value : TODO , } pub struct BrowsingContextCssLocator { pub type : String , pub value : Text , } pub struct BrowsingContextContextLocator { pub type : String , pub value : TODO , } pub struct BrowsingContextInnerTextLocator { pub type : String , pub value : Text , pub ignoreCase : Bool , pub matchType : TODO , pub maxDepth : JsUint , } pub struct BrowsingContextXPathLocator { pub type : String , pub value : Text , } pub type BrowsingContextNavigation = TODO ; pub struct BrowsingContextBaseNavigationInfo { pub context : BrowsingContextBrowsingContext , pub navigation : TODO , pub timestamp : JsUint , pub url : Text , } pub struct BrowsingContextNavigationInfo { pub NONE : BrowsingContextBaseNavigationInfo , } pub type BrowsingContextReadinessState = TODO ; pub type BrowsingContextUserPromptType = TODO ; pub struct BrowsingContextActivate { pub method : String , pub params : BrowsingContextActivateParameters , } pub struct BrowsingContextActivateParameters { pub context : BrowsingContextBrowsingContext , } pub struct BrowsingContextCaptureScreenshot { pub method : String , pub params : BrowsingContextCaptureScreenshotParameters , } pub struct BrowsingContextCaptureScreenshotParameters { pub context : BrowsingContextBrowsingContext , pub origin : TODO , pub format : BrowsingContextImageFormat , pub clip : BrowsingContextClipRectangle , } pub struct BrowsingContextImageFormat { pub type : Text , pub quality : TODO , } pub type BrowsingContextClipRectangle = TODO ; pub struct BrowsingContextElementClipRectangle { pub type : String , pub element : ScriptSharedReference , } pub struct BrowsingContextBoxClipRectangle { pub type : String , pub x : Float , pub y : Float , pub width : Float , pub height : Float , } pub struct BrowsingContextCaptureScreenshotResult { pub data : Text , } pub struct BrowsingContextClose { pub method : String , pub params : BrowsingContextCloseParameters , } pub struct BrowsingContextCloseParameters { pub context : BrowsingContextBrowsingContext , pub promptUnload : TODO , } pub struct BrowsingContextCreate { pub method : String , pub params : BrowsingContextCreateParameters , } pub type BrowsingContextCreateType = TODO ; pub struct BrowsingContextCreateParameters { pub type : BrowsingContextCreateType , pub referenceContext : BrowsingContextBrowsingContext , pub background : TODO , pub userContext : BrowserUserContext , } pub struct BrowsingContextCreateResult { pub context : BrowsingContextBrowsingContext , } pub struct BrowsingContextGetTree { pub method : String , pub params : BrowsingContextGetTreeParameters , } pub struct BrowsingContextGetTreeParameters { pub maxDepth : JsUint , pub root : BrowsingContextBrowsingContext , } pub struct BrowsingContextGetTreeResult { pub contexts : BrowsingContextInfoList , } pub struct BrowsingContextHandleUserPrompt { pub method : String , pub params : BrowsingContextHandleUserPromptParameters , } pub struct BrowsingContextHandleUserPromptParameters { pub context : BrowsingContextBrowsingContext , pub accept : Bool , pub userText : Text , } pub struct BrowsingContextLocateNodes { pub method : String , pub params : BrowsingContextLocateNodesParameters , } pub struct BrowsingContextLocateNodesParameters { pub context : BrowsingContextBrowsingContext , pub locator : BrowsingContextLocator , pub maxNodeCount : TODO , pub serializationOptions : ScriptSerializationOptions , pub startNodes : TODO , } pub struct BrowsingContextLocateNodesResult { pub nodes : TODO , } pub struct BrowsingContextNavigate { pub method : String , pub params : BrowsingContextNavigateParameters , } pub struct BrowsingContextNavigateParameters { pub context : BrowsingContextBrowsingContext , pub url : Text , pub wait : BrowsingContextReadinessState , } pub struct BrowsingContextNavigateResult { pub navigation : TODO , pub url : Text , } pub struct BrowsingContextPrint { pub method : String , pub params : BrowsingContextPrintParameters , } pub struct BrowsingContextPrintParameters { pub context : BrowsingContextBrowsingContext , pub background : TODO , pub margin : BrowsingContextPrintMarginParameters , pub orientation : TODO , pub page : BrowsingContextPrintPageParameters , pub pageRanges : TODO , pub scale : TODO , pub shrinkToFit : TODO , } pub struct BrowsingContextPrintMarginParameters { pub bottom : TODO , pub left : TODO , pub right : TODO , pub top : TODO , } pub struct BrowsingContextPrintPageParameters { pub height : TODO , pub width : TODO , } pub struct BrowsingContextPrintResult { pub data : Text , } pub struct BrowsingContextReload { pub method : String , pub params : BrowsingContextReloadParameters , } pub struct BrowsingContextReloadParameters { pub context : BrowsingContextBrowsingContext , pub ignoreCache : Bool , pub wait : BrowsingContextReadinessState , } pub struct BrowsingContextSetViewport { pub method : String , pub params : BrowsingContextSetViewportParameters , } pub struct BrowsingContextSetViewportParameters { pub context : BrowsingContextBrowsingContext , pub viewport : TODO , pub devicePixelRatio : TODO , pub userContexts : TODO , } pub struct BrowsingContextViewport { pub width : JsUint , pub height : JsUint , } pub struct BrowsingContextTraverseHistory { pub method : String , pub params : BrowsingContextTraverseHistoryParameters , } pub struct BrowsingContextTraverseHistoryParameters { pub context : BrowsingContextBrowsingContext , pub delta : JsInt , } pub struct BrowsingContextTraverseHistoryResult { } pub struct BrowsingContextContextCreated { pub method : String , pub params : BrowsingContextInfo , } pub struct BrowsingContextContextDestroyed { pub method : String , pub params : BrowsingContextInfo , } pub struct BrowsingContextNavigationStarted { pub method : String , pub params : BrowsingContextNavigationInfo , } pub struct BrowsingContextFragmentNavigated { pub method : String , pub params : BrowsingContextNavigationInfo , } pub struct BrowsingContextHistoryUpdated { pub method : String , pub params : BrowsingContextHistoryUpdatedParameters , } pub struct BrowsingContextHistoryUpdatedParameters { pub context : BrowsingContextBrowsingContext , pub url : Text , } pub struct BrowsingContextDomContentLoaded { pub method : String , pub params : BrowsingContextNavigationInfo , } pub struct BrowsingContextLoad { pub method : String , pub params : BrowsingContextNavigationInfo , } pub struct BrowsingContextDownloadWillBegin { pub method : String , pub params : BrowsingContextDownloadWillBeginParams , } pub struct BrowsingContextDownloadWillBeginParams { pub suggestedFilename : Text , pub NONE : BrowsingContextBaseNavigationInfo , } pub struct BrowsingContextNavigationAborted { pub method : String , pub params : BrowsingContextNavigationInfo , } pub struct BrowsingContextNavigationCommitted { pub method : String , pub params : BrowsingContextNavigationInfo , } pub struct BrowsingContextNavigationFailed { pub method : String , pub params : BrowsingContextNavigationInfo , } pub struct BrowsingContextUserPromptClosed { pub method : String , pub params : BrowsingContextUserPromptClosedParameters , } pub struct BrowsingContextUserPromptClosedParameters { pub context : BrowsingContextBrowsingContext , pub accepted : Bool , pub type : BrowsingContextUserPromptType , pub userText : Text , } pub struct BrowsingContextUserPromptOpened { pub method : String , pub params : BrowsingContextUserPromptOpenedParameters , } pub struct BrowsingContextUserPromptOpenedParameters { pub context : BrowsingContextBrowsingContext , pub handler : SessionUserPromptHandlerType , pub message : Text , pub type : BrowsingContextUserPromptType , pub defaultValue : Text , } pub struct EmulationCommand { pub NONE : TODO , pub NONE : MulationSetGeolocationOverride , } pub struct EmulationSetGeolocationOverride { pub method : String , pub params : TODO , pub NONE : MulationSetGeolocationOverrideParameters , } pub struct EmulationSetGeolocationOverrideParameters { pub coordinates : TODO , pub NONE : TODO , pub contexts : TODO , pub userContexts : TODO , } pub struct EmulationGeolocationCoordinates { pub latitude : Float , pub longitude : Float , pub accuracy : TODO , pub altitude : TODO , pub altitudeAccuracy : TODO , pub heading : TODO , pub speed : TODO , } pub enum NetworkCommand { Todo , Todo , Todo , Todo , Todo , Todo , Todo , Todo , } pub type NetworkResult = TODO ; pub enum NetworkEvent { Todo , Todo , Todo , Todo , Todo , } pub struct NetworkAuthChallenge { pub scheme : Text , pub realm : Text , } pub struct NetworkAuthCredentials { pub type : String , pub username : Text , pub password : Text , } pub struct NetworkBaseParameters { pub context : TODO , pub isBlocked : Bool , pub navigation : TODO , pub redirectCount : JsUint , pub request : NetworkRequestData , pub timestamp : JsUint , pub intercepts : TODO , } pub type NetworkBytesValue = TODO ; pub struct NetworkStringValue { pub type : String , pub value : Text , } pub struct NetworkBase64Value { pub type : String , pub value : Text , } pub type NetworkSameSite = TODO ; pub struct NetworkCookie { pub name : Text , pub value : NetworkBytesValue , pub domain : Text , pub path : Text , pub size : JsUint , pub httpOnly : Bool , pub secure : Bool , pub sameSite : NetworkSameSite , pub expiry : JsUint , pub NONE : Extensible , } pub struct NetworkCookieHeader { pub name : Text , pub value : NetworkBytesValue , } pub struct NetworkFetchTimingInfo { pub timeOrigin : Float , pub requestTime : Float , pub redirectStart : Float , pub redirectEnd : Float , pub fetchStart : Float , pub dnsStart : Float , pub dnsEnd : Float , pub connectStart : Float , pub connectEnd : Float , pub tlsStart : Float , pub requestStart : Float , pub responseStart : Float , pub responseEnd : Float , } pub struct NetworkHeader { pub name : Text , pub value : NetworkBytesValue , } pub struct NetworkInitiator { pub columnNumber : JsUint , pub lineNumber : JsUint , pub request : NetworkRequest , pub stackTrace : ScriptStackTrace , pub type : TODO , } pub type NetworkIntercept = TODO ; pub type NetworkRequest = TODO ; pub struct NetworkRequestData { pub request : NetworkRequest , pub url : Text , pub method : Text , pub headers : TODO , pub cookies : TODO , pub headersSize : JsUint , pub bodySize : TODO , pub destination : Text , pub initiatorType : TODO , pub timings : NetworkFetchTimingInfo , } pub struct NetworkResponseContent { pub size : JsUint , } pub struct NetworkResponseData { pub url : Text , pub protocol : Text , pub status : JsUint , pub statusText : Text , pub fromCache : Bool , pub headers : TODO , pub mimeType : Text , pub bytesReceived : JsUint , pub headersSize : TODO , pub bodySize : TODO , pub content : NetworkResponseContent , pub authChallenges : TODO , } pub struct NetworkSetCookieHeader { pub name : Text , pub value : NetworkBytesValue , pub domain : Text , pub httpOnly : Bool , pub expiry : Text , pub maxAge : JsInt , pub path : Text , pub sameSite : NetworkSameSite , pub secure : Bool , } pub type NetworkUrlPattern = TODO ; pub struct NetworkUrlPatternPattern { pub type : String , pub protocol : Text , pub hostname : Text , pub port : Text , pub pathname : Text , pub search : Text , } pub struct NetworkUrlPatternString { pub type : String , pub pattern : Text , } pub struct NetworkAddIntercept { pub method : String , pub params : NetworkAddInterceptParameters , } pub struct NetworkAddInterceptParameters { pub phases : TODO , pub contexts : TODO , pub urlPatterns : TODO , } pub type NetworkInterceptPhase = TODO ; pub struct NetworkAddInterceptResult { pub intercept : NetworkIntercept , } pub struct NetworkContinueRequest { pub method : String , pub params : NetworkContinueRequestParameters , } pub struct NetworkContinueRequestParameters { pub request : NetworkRequest , pub body : NetworkBytesValue , pub cookies : TODO , pub headers : TODO , pub method : Text , pub url : Text , } pub struct NetworkContinueResponse { pub method : String , pub params : NetworkContinueResponseParameters , } pub struct NetworkContinueResponseParameters { pub request : NetworkRequest , pub cookies : TODO , pub credentials : NetworkAuthCredentials , pub headers : TODO , pub reasonPhrase : Text , pub statusCode : JsUint , } pub struct NetworkContinueWithAuth { pub method : String , pub params : NetworkContinueWithAuthParameters , } pub struct NetworkContinueWithAuthParameters { pub request : NetworkRequest , pub todo : TODO , } pub struct NetworkContinueWithAuthCredentials { pub action : String , pub credentials : NetworkAuthCredentials , } pub struct NetworkContinueWithAuthNoCredentials { pub action : TODO , } pub struct NetworkFailRequest { pub method : String , pub params : NetworkFailRequestParameters , } pub struct NetworkFailRequestParameters { pub request : NetworkRequest , } pub struct NetworkProvideResponse { pub method : String , pub params : NetworkProvideResponseParameters , } pub struct NetworkProvideResponseParameters { pub request : NetworkRequest , pub body : NetworkBytesValue , pub cookies : TODO , pub headers : TODO , pub reasonPhrase : Text , pub statusCode : JsUint , } pub struct NetworkRemoveIntercept { pub method : String , pub params : NetworkRemoveInterceptParameters , } pub struct NetworkRemoveInterceptParameters { pub intercept : NetworkIntercept , } pub struct NetworkSetCacheBehavior { pub method : String , pub params : NetworkSetCacheBehaviorParameters , } pub struct NetworkSetCacheBehaviorParameters { pub cacheBehavior : TODO , pub contexts : TODO , } pub struct NetworkAuthRequired { pub method : String , pub params : NetworkAuthRequiredParameters , } pub struct NetworkAuthRequiredParameters { pub NONE : NetworkBaseParameters , pub response : NetworkResponseData , } pub struct NetworkBeforeRequestSent { pub method : String , pub params : NetworkBeforeRequestSentParameters , } pub struct NetworkBeforeRequestSentParameters { pub NONE : NetworkBaseParameters , pub initiator : NetworkInitiator , } pub struct NetworkFetchError { pub method : String , pub params : NetworkFetchErrorParameters , } pub struct NetworkFetchErrorParameters { pub NONE : NetworkBaseParameters , pub errorText : Text , } pub struct NetworkResponseCompleted { pub method : String , pub params : NetworkResponseCompletedParameters , } pub struct NetworkResponseCompletedParameters { pub NONE : NetworkBaseParameters , pub response : NetworkResponseData , } pub struct NetworkResponseStarted { pub method : String , pub params : NetworkResponseStartedParameters , } pub struct NetworkResponseStartedParameters { pub NONE : NetworkBaseParameters , pub response : NetworkResponseData , } pub enum ScriptCommand { Todo , Todo , Todo , Todo , Todo , Todo , } pub type ScriptResult = TODO ; pub enum ScriptEvent { Todo , Todo , Todo , } pub type ScriptChannel = TODO ; pub struct ScriptChannelValue { pub type : String , pub value : ScriptChannelProperties , } pub struct ScriptChannelProperties { pub channel : ScriptChannel , pub serializationOptions : ScriptSerializationOptions , pub ownership : ScriptResultOwnership , } pub type ScriptEvaluateResult = TODO ; pub struct ScriptEvaluateResultSuccess { pub type : String , pub result : ScriptRemoteValue , pub realm : ScriptRealm , } pub struct ScriptEvaluateResultException { pub type : String , pub exceptionDetails : ScriptExceptionDetails , pub realm : ScriptRealm , } pub struct ScriptExceptionDetails { pub columnNumber : JsUint , pub exception : ScriptRemoteValue , pub lineNumber : JsUint , pub stackTrace : ScriptStackTrace , pub text : Text , } pub type ScriptHandle = TODO ; pub type ScriptInternalId = TODO ; pub type ScriptLocalValue = TODO ; pub struct ScriptListLocalValue { pub NONE : ScriptLocalValue , } pub struct ScriptArrayLocalValue { pub type : String , pub value : ScriptListLocalValue , } pub struct ScriptDateLocalValue { pub type : String , pub value : Text , } pub struct ScriptMappingLocalValue { pub NONE : TODO , } pub struct ScriptMapLocalValue { pub type : String , pub value : ScriptMappingLocalValue , } pub struct ScriptObjectLocalValue { pub type : String , pub value : ScriptMappingLocalValue , } pub struct ScriptRegExpValue { pub pattern : Text , pub flags : Text , } pub struct ScriptRegExpLocalValue { pub type : String , pub value : ScriptRegExpValue , } pub struct ScriptSetLocalValue { pub type : String , pub value : ScriptListLocalValue , } pub type ScriptPreloadScript = TODO ; pub type ScriptRealm = TODO ; pub type ScriptPrimitiveProtocolValue = TODO ; pub struct ScriptUndefinedValue { pub type : String , } pub struct ScriptNullValue { pub type : String , } pub struct ScriptStringValue { pub type : String , pub value : Text , } pub type ScriptSpecialNumber = TODO ; pub struct ScriptNumberValue { pub type : String , pub value : TODO , } pub struct ScriptBooleanValue { pub type : String , pub value : Bool , } pub struct ScriptBigIntValue { pub type : String , pub value : Text , } pub type ScriptRealmInfo = TODO ; pub struct ScriptBaseRealmInfo { pub realm : ScriptRealm , pub origin : Text , } pub struct ScriptWindowRealmInfo { pub NONE : ScriptBaseRealmInfo , pub type : String , pub context : BrowsingContextBrowsingContext , pub sandbox : Text , } pub struct ScriptDedicatedWorkerRealmInfo { pub NONE : ScriptBaseRealmInfo , pub type : String , pub owners : TODO , } pub struct ScriptSharedWorkerRealmInfo { pub NONE : ScriptBaseRealmInfo , pub type : String , } pub struct ScriptServiceWorkerRealmInfo { pub NONE : ScriptBaseRealmInfo , pub type : String , } pub struct ScriptWorkerRealmInfo { pub NONE : ScriptBaseRealmInfo , pub type : String , } pub struct ScriptPaintWorkletRealmInfo { pub NONE : ScriptBaseRealmInfo , pub type : String , } pub struct ScriptAudioWorkletRealmInfo { pub NONE : ScriptBaseRealmInfo , pub type : String , } pub struct ScriptWorkletRealmInfo { pub NONE : ScriptBaseRealmInfo , pub type : String , } pub type ScriptRealmType = TODO ; pub type ScriptRemoteReference = TODO ; pub struct ScriptSharedReference { pub sharedId : ScriptSharedId , pub handle : ScriptHandle , pub NONE : Extensible , } pub struct ScriptRemoteObjectReference { pub handle : ScriptHandle , pub sharedId : ScriptSharedId , pub NONE : Extensible , } pub type ScriptRemoteValue = TODO ; pub struct ScriptListRemoteValue { pub NONE : ScriptRemoteValue , } pub struct ScriptMappingRemoteValue { pub NONE : TODO , } pub struct ScriptSymbolRemoteValue { pub type : String , pub handle : ScriptHandle , pub internalId : ScriptInternalId , } pub struct ScriptArrayRemoteValue { pub type : String , pub handle : ScriptHandle , pub internalId : ScriptInternalId , pub value : ScriptListRemoteValue , } pub struct ScriptObjectRemoteValue { pub type : String , pub handle : ScriptHandle , pub internalId : ScriptInternalId , pub value : ScriptMappingRemoteValue , } pub struct ScriptFunctionRemoteValue { pub type : String , pub handle : ScriptHandle , pub internalId : ScriptInternalId , } pub type ScriptRegExpRemoteValue = TODO ; pub type ScriptDateRemoteValue = TODO ; pub struct ScriptMapRemoteValue { pub type : String , pub handle : ScriptHandle , pub internalId : ScriptInternalId , pub value : ScriptMappingRemoteValue , } pub struct ScriptSetRemoteValue { pub type : String , pub handle : ScriptHandle , pub internalId : ScriptInternalId , pub value : ScriptListRemoteValue , } pub struct ScriptWeakMapRemoteValue { pub type : String , pub handle : ScriptHandle , pub internalId : ScriptInternalId , } pub struct ScriptWeakSetRemoteValue { pub type : String , pub handle : ScriptHandle , pub internalId : ScriptInternalId , } pub struct ScriptGeneratorRemoteValue { pub type : String , pub handle : ScriptHandle , pub internalId : ScriptInternalId , } pub struct ScriptErrorRemoteValue { pub type : String , pub handle : ScriptHandle , pub internalId : ScriptInternalId , } pub struct ScriptProxyRemoteValue { pub type : String , pub handle : ScriptHandle , pub internalId : ScriptInternalId , } pub struct ScriptPromiseRemoteValue { pub type : String , pub handle : ScriptHandle , pub internalId : ScriptInternalId , } pub struct ScriptTypedArrayRemoteValue { pub type : String , pub handle : ScriptHandle , pub internalId : ScriptInternalId , } pub struct ScriptArrayBufferRemoteValue { pub type : String , pub handle : ScriptHandle , pub internalId : ScriptInternalId , } pub struct ScriptNodeListRemoteValue { pub type : String , pub handle : ScriptHandle , pub internalId : ScriptInternalId , pub value : ScriptListRemoteValue , } pub struct ScriptHtmlCollectionRemoteValue { pub type : String , pub handle : ScriptHandle , pub internalId : ScriptInternalId , pub value : ScriptListRemoteValue , } pub struct ScriptNodeRemoteValue { pub type : String , pub sharedId : ScriptSharedId , pub handle : ScriptHandle , pub internalId : ScriptInternalId , pub value : ScriptNodeProperties , } pub struct ScriptNodeProperties { pub nodeType : JsUint , pub childNodeCount : JsUint , pub attributes : TODO , pub children : TODO , pub localName : Text , pub mode : TODO , pub namespaceURI : Text , pub nodeValue : Text , pub shadowRoot : TODO , } pub struct ScriptWindowProxyRemoteValue { pub type : String , pub value : ScriptWindowProxyProperties , pub handle : ScriptHandle , pub internalId : ScriptInternalId , } pub struct ScriptWindowProxyProperties { pub context : BrowsingContextBrowsingContext , } pub type ScriptResultOwnership = TODO ; pub struct ScriptSerializationOptions { pub maxDomDepth : TODO , pub maxObjectDepth : TODO , pub includeShadowTree : TODO , } pub type ScriptSharedId = TODO ; pub struct ScriptStackFrame { pub columnNumber : JsUint , pub functionName : Text , pub lineNumber : JsUint , pub url : Text , } pub struct ScriptStackTrace { pub callFrames : TODO , } pub struct ScriptSource { pub realm : ScriptRealm , pub context : BrowsingContextBrowsingContext , } pub struct ScriptRealmTarget { pub realm : ScriptRealm , } pub struct ScriptContextTarget { pub context : BrowsingContextBrowsingContext , pub sandbox : Text , } pub type ScriptTarget = TODO ; pub struct ScriptAddPreloadScript { pub method : String , pub params : ScriptAddPreloadScriptParameters , } pub struct ScriptAddPreloadScriptParameters { pub functionDeclaration : Text , pub arguments : TODO , pub contexts : TODO , pub userContexts : TODO , pub sandbox : Text , } pub struct ScriptAddPreloadScriptResult { pub script : ScriptPreloadScript , } pub struct ScriptDisown { pub method : String , pub params : ScriptDisownParameters , } pub struct ScriptDisownParameters { pub handles : TODO , pub target : ScriptTarget , } pub struct ScriptCallFunction { pub method : String , pub params : ScriptCallFunctionParameters , } pub struct ScriptCallFunctionParameters { pub functionDeclaration : Text , pub awaitPromise : Bool , pub target : ScriptTarget , pub arguments : TODO , pub resultOwnership : ScriptResultOwnership , pub serializationOptions : ScriptSerializationOptions , pub this : ScriptLocalValue , pub userActivation : TODO , } pub struct ScriptEvaluate { pub method : String , pub params : ScriptEvaluateParameters , } pub struct ScriptEvaluateParameters { pub expression : Text , pub target : ScriptTarget , pub awaitPromise : Bool , pub resultOwnership : ScriptResultOwnership , pub serializationOptions : ScriptSerializationOptions , pub userActivation : TODO , } pub struct ScriptGetRealms { pub method : String , pub params : ScriptGetRealmsParameters , } pub struct ScriptGetRealmsParameters { pub context : BrowsingContextBrowsingContext , pub type : ScriptRealmType , } pub struct ScriptGetRealmsResult { pub realms : TODO , } pub struct ScriptRemovePreloadScript { pub method : String , pub params : ScriptRemovePreloadScriptParameters , } pub struct ScriptRemovePreloadScriptParameters { pub script : ScriptPreloadScript , } pub struct ScriptMessage { pub method : String , pub params : ScriptMessageParameters , } pub struct ScriptMessageParameters { pub channel : ScriptChannel , pub data : ScriptRemoteValue , pub source : ScriptSource , } pub struct ScriptRealmCreated { pub method : String , pub params : ScriptRealmInfo , } pub struct ScriptRealmDestroyed { pub method : String , pub params : ScriptRealmDestroyedParameters , } pub struct ScriptRealmDestroyedParameters { pub realm : ScriptRealm , } pub enum StorageCommand { Todo , Todo , Todo , } pub type StorageResult = TODO ; pub struct StoragePartitionKey { pub userContext : Text , pub sourceOrigin : Text , pub NONE : Extensible , } pub struct StorageGetCookies { pub method : String , pub params : StorageGetCookiesParameters , } pub struct StorageCookieFilter { pub name : Text , pub value : NetworkBytesValue , pub domain : Text , pub path : Text , pub size : JsUint , pub httpOnly : Bool , pub secure : Bool , pub sameSite : NetworkSameSite , pub expiry : JsUint , pub NONE : Extensible , } pub struct StorageBrowsingContextPartitionDescriptor { pub type : String , pub context : BrowsingContextBrowsingContext , } pub struct StorageStorageKeyPartitionDescriptor { pub type : String , pub userContext : Text , pub sourceOrigin : Text , pub NONE : Extensible , } pub type StoragePartitionDescriptor = TODO ; pub struct StorageGetCookiesParameters { pub filter : StorageCookieFilter , pub partition : StoragePartitionDescriptor , } pub struct StorageGetCookiesResult { pub cookies : TODO , pub partitionKey : StoragePartitionKey , } pub struct StorageSetCookie { pub method : String , pub params : StorageSetCookieParameters , } pub struct StoragePartialCookie { pub name : Text , pub value : NetworkBytesValue , pub domain : Text , pub path : Text , pub httpOnly : Bool , pub secure : Bool , pub sameSite : NetworkSameSite , pub expiry : JsUint , pub NONE : Extensible , } pub struct StorageSetCookieParameters { pub cookie : StoragePartialCookie , pub partition : StoragePartitionDescriptor , } pub struct StorageSetCookieResult { pub partitionKey : StoragePartitionKey , } pub struct StorageDeleteCookies { pub method : String , pub params : StorageDeleteCookiesParameters , } pub struct StorageDeleteCookiesParameters { pub filter : StorageCookieFilter , pub partition : StoragePartitionDescriptor , } pub struct StorageDeleteCookiesResult { pub partitionKey : StoragePartitionKey , } pub type LogEvent = TODO ; pub type LogLevel = TODO ; pub type LogEntry = TODO ; pub struct LogBaseLogEntry { pub level : LogLevel , pub source : ScriptSource , pub text : TODO , pub timestamp : JsUint , pub stackTrace : ScriptStackTrace , } pub struct LogGenericLogEntry { pub NONE : LogBaseLogEntry , pub type : Text , } pub struct LogConsoleLogEntry { pub NONE : LogBaseLogEntry , pub type : String , pub method : Text , pub args : TODO , } pub struct LogJavascriptLogEntry { pub NONE : LogBaseLogEntry , pub type : String , } pub struct LogEntryAdded { pub method : String , pub params : LogEntry , } pub enum InputCommand { Todo , Todo , Todo , } pub type InputEvent = TODO ; pub struct InputElementOrigin { pub type : String , pub element : ScriptSharedReference , } pub struct InputPerformActions { pub method : String , pub params : InputPerformActionsParameters , } pub struct InputPerformActionsParameters { pub context : BrowsingContextBrowsingContext , pub actions : TODO , } pub type InputSourceActions = TODO ; pub struct InputNoneSourceActions { pub type : String , pub id : Text , pub actions : TODO , } pub type InputNoneSourceAction = TODO ; pub struct InputKeySourceActions { pub type : String , pub id : Text , pub actions : TODO , } pub type InputKeySourceAction = TODO ; pub struct InputPointerSourceActions { pub type : String , pub id : Text , pub parameters : InputPointerParameters , pub actions : TODO , } pub type InputPointerType = TODO ; pub struct InputPointerParameters { pub pointerType : TODO , } pub type InputPointerSourceAction = TODO ; pub struct InputWheelSourceActions { pub type : String , pub id : Text , pub actions : TODO , } pub type InputWheelSourceAction = TODO ; pub struct InputPauseAction { pub type : String , pub duration : JsUint , } pub struct InputKeyDownAction { pub type : String , pub value : Text , } pub struct InputKeyUpAction { pub type : String , pub value : Text , } pub struct InputPointerUpAction { pub type : String , pub button : JsUint , } pub struct InputPointerDownAction { pub type : String , pub button : JsUint , pub NONE : InputPointerCommonProperties , } pub struct InputPointerMoveAction { pub type : String , pub x : Float , pub y : Float , pub duration : JsUint , pub origin : InputOrigin , pub NONE : InputPointerCommonProperties , } pub struct InputWheelScrollAction { pub type : String , pub x : JsInt , pub y : JsInt , pub deltaX : JsInt , pub deltaY : JsInt , pub duration : JsUint , pub origin : TODO , } pub struct InputPointerCommonProperties { pub width : TODO , pub height : TODO , pub pressure : TODO , pub tangentialPressure : TODO , pub twist : TODO , pub altitudeAngle : TODO , pub azimuthAngle : TODO , } pub type InputOrigin = TODO ; pub struct InputReleaseActions { pub method : String , pub params : InputReleaseActionsParameters , } pub struct InputReleaseActionsParameters { pub context : BrowsingContextBrowsingContext , } pub struct InputSetFiles { pub method : String , pub params : InputSetFilesParameters , } pub struct InputSetFilesParameters { pub context : BrowsingContextBrowsingContext , pub element : ScriptSharedReference , pub files : TODO , } pub struct InputFileDialogOpened { pub method : String , pub params : InputFileDialogInfo , } pub struct InputFileDialogInfo { pub context : BrowsingContextBrowsingContext , pub element : ScriptSharedReference , pub multiple : Bool , } pub enum WebExtensionCommand { Todo , Todo , } pub type WebExtensionResult = TODO ; pub type WebExtensionExtension = TODO ; pub struct WebExtensionInstall { pub method : String , pub params : WebExtensionInstallParameters , } pub struct WebExtensionInstallParameters { pub extensionData : WebExtensionExtensionData , } pub type WebExtensionExtensionData = TODO ; pub struct WebExtensionExtensionPath { pub type : String , pub path : Text , } pub struct WebExtensionExtensionArchivePath { pub type : String , pub path : Text , } pub struct WebExtensionExtensionBase64Encoded { pub type : String , pub value : Text , } pub struct WebExtensionInstallResult { pub extension : WebExtensionExtension , } pub struct WebExtensionUninstall { pub method : String , pub params : WebExtensionUninstallParameters , } pub struct WebExtensionUninstallParameters { pub extension : WebExtensionExtension , }