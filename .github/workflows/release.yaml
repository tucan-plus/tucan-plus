name: Release extension

on:
  workflow_dispatch:
    inputs:
      publish:
        required: true
        type: boolean

permissions:
  contents: write # write tags
  pages: write # update pages
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-24.04
    steps:
    - uses: actions/checkout@v4
    - name: Add SSH key
      env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
      run: |
          mkdir -p /home/runner/.ssh
          ssh-keyscan selfmade4u.de >> /home/runner/.ssh/known_hosts
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > /home/runner/.ssh/github_actions
          chmod 600 /home/runner/.ssh/github_actions
          ssh-agent -a $SSH_AUTH_SOCK > /dev/null
          ssh-add /home/runner/.ssh/github_actions
    - name: Extract version
      id: version
      run: echo "VERSION=$(jq -r .version tucan-plus-extension/manifest.json)" >> "$GITHUB_OUTPUT"
    - env:
        SSH_AUTH_SOCK: /tmp/ssh_agent.sock
      run: |
        set -ex
        OUTPUT=$(echo '
        DIR=$(mktemp -d)
        cd $DIR
        git clone --depth 1 --revision ${{ github.sha }} https://github.com/tucan-plus/tucan-plus
        cd tucan-plus
        echo ${{ secrets.CHROMIUM_EXTENSION_SIGNING_KEY }} | base64 --decode > cert.pem
        # https://addons.mozilla.org/en-US/developers/addon/api/key/
        WEB_EXT_API_KEY=${{ secrets.WEB_EXT_API_KEY }} WEB_EXT_API_SECRET=${{ secrets.WEB_EXT_API_SECRET }} CHROMIUM_EXTENSION_SIGNING_KEY=$PWD/cert.pem nix --extra-experimental-features "nix-command flakes" --store unix:///nix/var/nix/daemon-socket/socket run -L .#publish
        echo $DIR
        ' | ssh -o ServerAliveInterval=30 root@selfmade4u.de 'bash')
        echo "$OUTPUT"
        rsync -vr --include='*.crx' --include='*.xpi' --exclude="*" root@selfmade4u.de:$(echo "$OUTPUT" | tail -n1)/tucan-plus/out/ out
        ls -lh out
    - uses: actions/upload-artifact@v4
      with:
        name: tucan-plus-extension-${{ steps.version.outputs.VERSION }}-crx
        path: out/tucan-plus-extension-${{ steps.version.outputs.VERSION }}.crx
    - uses: actions/upload-artifact@v4
      with:
        name: tucan-plus-extension-${{ steps.version.outputs.VERSION }}-xpi
        path: out/tucan-plus-extension-${{ steps.version.outputs.VERSION }}.xpi
    - env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh release create --generate-notes ${{ !inputs.publish && '--prerelease' }} v${{ steps.version.outputs.VERSION }} out/tucan-plus-extension-${{ steps.version.outputs.VERSION }}.xpi out/tucan-plus-extension-${{ steps.version.outputs.VERSION }}.crx
    - if: ${{ inputs.publish }}
      run: |
        mkdir pages
        cp out/tucan-plus-extension-${{ steps.version.outputs.VERSION }}.crx pages/
        cp out/tucan-plus-extension-${{ steps.version.outputs.VERSION }}.xpi pages/
        cat << EOF > pages/README.md
        For a description of the features see [https://github.com/tucan-plus/tucan-plus/blob/main/README.md](https://github.com/tucan-plus/tucan-plus/blob/main/README.md)

        # Installation

        ## Firefox (with autoupdates)

        1. [Download extension for Firefox](tucan-plus-extension-${{ steps.version.outputs.VERSION }}.xpi)

        On Android continue with the following steps:
        1. Go to Settings
        2. Scroll all the way down and click on About Firefox
        3. press the logo five times, it should say that the debug menu got activated
        4. go back
        5. Click on Install extension from file and select the downloaded .xpi file

        ## Chromium (with autoupdates)

        1. Right click on [Download extension for Chromium](tucan-plus-extension-${{ steps.version.outputs.VERSION }}.crx) and select "Save link as..." to download the extension file. Doing it this way is important, simply clicking on the link to download does not work as Chromium blocks the download.
        2. In the Chromium Menu, go to Extensions -> Manage Extensions
        3. Enable developer mode in the top right corner
        4. Drag and drop the downloaded file into this area
        EOF
        cat << EOF > pages/updates.xml
        <?xml version='1.0' encoding='UTF-8'?>
        <gupdate xmlns='http://www.google.com/update2/response' protocol='2.0'>
          <app appid='ohpjpeodokebaeilcpfejcaipbeeekkj'>
            <updatecheck codebase='https://tucan-plus.github.io/tucan-plus/tucan-plus-extension-${{ steps.version.outputs.VERSION }}.crx' version='${{ steps.version.outputs.VERSION }}' status='ok' />
          </app>
        </gupdate>
        EOF
        cat << EOF > pages/updates.json
        {
          "addons": {
            "tucant@selfmade4u.de": {
              "updates": [
                {
                  "version": "${{ steps.version.outputs.VERSION }}",
                  "update_link": "https://tucan-plus.github.io/tucan-plus/tucan-plus-extension-${{ steps.version.outputs.VERSION }}.xpi"
                }
              ]
            }
          }
        }
        EOF
    - name: Setup Pages
      uses: actions/configure-pages@v5
    - name: Build with Jekyll
      uses: actions/jekyll-build-pages@v1
      with:
        source: ./pages
        destination: ./_site
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3

  deploy:
    if: ${{ inputs.publish }}
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-24.04
    needs: [build]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
