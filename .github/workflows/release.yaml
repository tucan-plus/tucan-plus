name: Release extension

on: workflow_dispatch

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-24.04
    steps:
    - uses: cachix/install-nix-action@v31
      with:
        github_access_token: ${{ secrets.GITHUB_TOKEN }}
    - uses: actions/checkout@v4
    - name: Extract version
      id: version
      run: echo "VERSION=$(jq -r .version tucant-extension/manifest.json)" >> "$GITHUB_OUTPUT"
    - env:
        # https://addons.mozilla.org/en-US/developers/addon/api/key/
        WEB_EXT_API_KEY: ${{ secrets.WEB_EXT_API_KEY }}
        WEB_EXT_API_SECRET: ${{ secrets.WEB_EXT_API_SECRET }}
        CHROMIUM_EXTENSION_SIGNING_KEY: ${{ secrets.CHROMIUM_EXTENSION_SIGNING_KEY }}
      run: |
        echo $CHROMIUM_EXTENSION_SIGNING_KEY | base64 --decode > cert.pem
        CHROMIUM_EXTENSION_SIGNING_KEY=$PWD/cert.pem nix run .#publish
    - uses: actions/upload-artifact@v4
      with:
        name: tucant-extension-${{ steps.version.outputs.VERSION }}-crx
        path: out/tucant-extension-${{ steps.version.outputs.VERSION }}.crx
    - uses: actions/upload-artifact@v4
      with:
        name: tucant-extension-${{ steps.version.outputs.VERSION }}-xpi
        path: out/tucant-extension-${{ steps.version.outputs.VERSION }}.xpi
    - env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh release create v${{ steps.version.outputs.VERSION }} out/tucant-extension-${{ steps.version.outputs.VERSION }}.xpi out/tucant-extension-${{ steps.version.outputs.VERSION }}.crx
    - run: |
        mkdir pages
        cp out/tucant-extension-${{ steps.version.outputs.VERSION }}.crx pages/
        cp out/tucant-extension-${{ steps.version.outputs.VERSION }}.xpi pages/
        cat << EOF > pages/README.md
        For a description of the features see https://github.com/tucant/tucant/blob/main/README.md

        # Installation

        ## Firefox (with autoupdates)

        1. [Download extension for Firefox](tucant-extension-${{ steps.version.outputs.VERSION }}.xpi)

        On Android continue with the following steps:
        1. Go to Settings
        2. Scroll all the way down and click on About Firefox
        3. press the logo five times, it should say that the debug menu got activated
        4. go back
        5. Click on Install extension from file and select the downloaded .xpi file

        ## Chromium (with autoupdates)

        1. Right click on [Download extension for Chromium](tucant-extension-${{ steps.version.outputs.VERSION }}.crx) and select "Save link as..." to download the extension file. Doing it this way is important, simply clicking on the link to download does not work as Chromium blocks the download.
        2. In the Chromium Menu, go to Extensions -> Manage Extensions
        3. Enable developer mode in the top right corner
        5. Uninstall the non-autoupdate version if you have installed it
        4. Drag and drop the downloaded file into this area
        EOF
        cat << EOF > pages/updates.xml
        <?xml version='1.0' encoding='UTF-8'?>
        <gupdate xmlns='http://www.google.com/update2/response' protocol='2.0'>
          <app appid='ohpjpeodokebaeilcpfejcaipbeeekkj'>
            <updatecheck codebase='https://tucant.github.io/tucant/tucant-extension-${{ steps.version.outputs.VERSION }}.crx' version='${{ steps.version.outputs.VERSION }}' status='ok' />
          </app>
        </gupdate>
        EOF
        cat << EOF > pages/updates.json
        {
          "addons": {
            "tucant@selfmade4u.de": {
              "updates": [
                {
                  "version": "${{ steps.version.outputs.VERSION }}",
                  "update_link": "https://tucant.github.io/tucant/tucant-extension-${{ steps.version.outputs.VERSION }}.xpi"
                }
              ]
            }
          }
        }
        EOF
    - name: Setup Pages
      uses: actions/configure-pages@v5
    - name: Build with Jekyll
      uses: actions/jekyll-build-pages@v1
      with:
        source: ./pages
        destination: ./_site
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-24.04
    needs: [build]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4